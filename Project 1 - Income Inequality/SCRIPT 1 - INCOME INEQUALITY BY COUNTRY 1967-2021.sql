
/*

													SQL PORTFOLIO PROJECT 1 - ASSESSMENT OF 
													  INCOME INEQUALITY AROUND THE WORLD
															FROM 1967 UNTIL 2021

							INTRODUCTION


							THE PURPOSE OF THIS PROJECT IS TO STUDY HOW INCOME INEQUUALITY VARIES FROM COUNTRY TO COUNTRY 
							AND HOW THIS HAS CHANGED OVER TIME. THE GINI INDEX IS USED TO MEASURE ECONOMIC INEQUALITY AND 
							IS EXPRESSED AS A NORMALISED VALUE FROM 0-1. A HIGHER VALUE INDICATES A GREATER INEQUALITY E.G. 0.6, 
							WHILST A LOWER VALUE INDICATES LESS ECONOMIC INEQUALITY E.G. 0.3.

							I HAVE CARRIED OUT A HIGH LEVEL EXPLORATORY DATA ANALYSIS USING SQL SERVER (USING MS SQL MANAGEMENT STUDIO)
							USING SEVERAL QUERIES. WITHIN THIS SCRIPT, I HAVE DEMONSTRATED A COMBINATION OF BASIC, INTERMEDIATE AND MORE ADVANCED 
							TECHNIQUES.

							THE DATA OUTPUT FROM THESE QUERIES IS THEN SAVED IN VIEWS, WHERE THEY CAN BE EXPORTED FOR DATA VISUALISATION IN A 
							SOFTWARE PACKAGE SUCH AS TABLEAU, POWER BI OR LOOKER.

							THE DATA

						
							I HAVE IMPORTED TWO DATASETS FROM 
							--https://ourworldindata.org/income-inequality, WHICH ARE ALSO INCLUDED WITHIN THIS REPOSITORY. 
							THIS DATA HAS BEEN TAKEN FROM THE WORLD BANK'S PovcalNet. HOWEVER, WHILST THIS PROVIDES EXTENSIVE 
							GLOBAL COVERAGE OF DATA, THE DATA ON THE PovcalNet HAS BEEN GATHERED USING TWO DISTINCT METHODS:
							
							1. INCOME SURVEYS
							2. CONSUMPTION SURVEYS

							THEREFORE, THE COMPARABILITY OF DATA MAY NOT BE FULLY RELIABLE. THIS PROJECT HAS BEEN CARRIED OUT SOLELY
							TO DEMONSTRATE MY SQL ABILITIES AND HOW THEY CAN BE USED TO GAIN A HIGH LEVEL INSIGHT INTO THE UNDERLYING 
							DATA IN A REAL DATASET.
							
*/
	
/*

1. LOADING AND OBSERVING THE DATA TABLES AS SHOWN IN CSV FILES. THIS SIMPLY DISPLAYS THE DATA 

*/

--SELECT * FROM 
--[economic-inequality-gini-index]

--SELECT * FROM 
--[income-share-of-the-top-10-pip]

/*

2. MERGING THE TABLES TOGETHER - I WANTED TO CARRY OUT A HIGH LEVEL COMPARISON BETWEEN THE 
TWO TABLES IN ORDER TO UNDERSTAND THE CORRELATION BETWEEN THE GINI INDEX AND INCOME SHARE OF
THE TOP 10 PERCENT OF RICHEST ENTITIES/INDIVIDUALS WITHIN A PARTICULAR COUNTRY. 
THEREFORE, I HAVE JOINED THE TABLES BASED ON COMMON FIELDS TO SHOW BOTH VARIABLES SIDE BY SIDE

BY CARRYING OUT AN INNER JOIN, ALL DATA WITH NULL OR MISSING VALUES HAVE BEEN AUTOMATICALLY REMOVED
SINCE THERE IS NOTHING IN COMMON BETWEEN BOTH TABLES

*/

DROP TABLE IF EXISTS #gini_richest10_comparison 
CREATE TABLE #gini_richest10_comparison
(
Entity NVARCHAR(50),
Year SMALLINT NOT NULL,
Gini_coefficient FLOAT,
richestDecileShare FLOAT,
)

INSERT INTO #gini_richest10_comparison


SELECT gini.Entity, gini.Year, gini.Gini_coefficient, richestDecileShare FROM 
[economic-inequality-gini-index] AS gini

FULL OUTER JOIN [income-share-of-the-top-10-pip] AS richDecile
	ON gini.Entity = richDecile.Entity

ORDER BY 1,2 DESC


SELECT * FROM #gini_richest10_comparison

/*

3. I WANTED TO FIND OUT THE YEAR IN WHICH THE GINI COEFFICIENT WAS HIGHEST FOR INDIA. I DONE THIS WITH A STORED PROCEDURE, 
AS IT MADE IT A LOT EASIER TO REPEAT THE SAME PROCESS WITH A DIFFERENT COUNTRY, FOR EXAMPLE I HAVE INCLUDED AN ADDITIONAL 
LINE TO EXECUTE THE SAME QUERY FOR THE UNITED KINGDOM

I USED THE MAX FUNCTION ON Gini_coefficient TO GET THE HIGHEST VALUE 

*/

--CREATE PROCEDURE MaxGini_ByCountry
ALTER PROCEDURE MaxGini_ByCountry
@Country nvarchar(50)
AS

SELECT gini.Entity, gini.Year, MAX(gini.Gini_coefficient) AS MaxGini 
FROM [economic-inequality-gini-index] AS gini

WHERE gini.Entity = @Country
GROUP BY gini.Entity, gini.Year
--order by gini.Year desc
ORDER BY MaxGini DESC

EXEC MaxGini_ByCountry @Country = 'India'

--EXEC MaxGini_ByCountry @Country = 'United Kingdom'

/* 

4. THE ABOVE QUERY HAS GIVEN ME THE MAXIMUM GINI COEFFICIENT AS A LIST, BUT I WANT A QUERY 
THAT CAN RETURN JUST THIS VALUE, NOT EVERY OTHER VALUE. THEREFORE, THE QUERY BELOW WILL RETURN JUST THE MAXIMUM GINI COEFFICIENT. 
HOWEVER, I HAVE ALSO CREATED THIS TEMP TABLE WITHIN A STORED PROCEDURE SO AGAIN, I CAN RUN THIS QUERY FOR ANY COUNTRY WITHIN THE DATASET

*/

--CREATE PROCEDURE MaxGini_and_Year
ALTER PROCEDURE MaxGini_and_Year
@Country NVARCHAR(50)
AS

DROP TABLE IF EXISTS #MAXGINI
CREATE TABLE #MAXGINI
(
Entity NVARCHAR(50),
Year SMALLINT,
Gini_coefficient FLOAT
)

INSERT INTO #MAXGINI

SELECT gini.Entity, gini.Year, gini.Gini_coefficient
FROM [economic-inequality-gini-index] AS gini
WHERE gini.Entity = @Country
ORDER BY gini.Gini_coefficient DESC

SELECT TOP (1) 
[Year],
[Gini_coefficient]
FROM #MAXGINI

EXEC MaxGini_and_Year @Country = 'India'

EXEC MaxGini_and_Year @Country = 'United States'

/*

5. CREATE VIEWS FROM THE DATA FROM QUERY 2 SO THAT THEY CAN BE STORED AND LATER EXPORTED INTO A DATA VISUALISATION SOFTWARE PACKAGE


*/

CREATE VIEW MergedGini_and_richestDecile
AS

SELECT gini.Entity, gini.Year, gini.Gini_coefficient, richestDecileShare FROM 
[economic-inequality-gini-index] AS gini

FULL OUTER JOIN [income-share-of-the-top-10-pip] AS richDecile
	ON gini.Entity = richDecile.Entity

--ORDER BY 1,2 DESC -- ORDER BY AND GROUP BY CLAUSES ARE NOT ALLOWED WHEN STORING A VIEW

